{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/empresas/empresa.service.ts","./src/app/empresas/empresas-cadastro/empresas-cadastro.component.ts","./src/app/empresas/empresas-cadastro/empresas-cadastro.component.html","./src/app/empresas/empresas-listagem/empresas-listagem.component.ts","./src/app/empresas/empresas-listagem/empresas-listagem.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'EmpresasApp-DB1';\n}\n","<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n  <span style=\"margin-left: 20px;\">{{title}}</span>\n</div>\n\n<div class=\"content\" role=\"main\">\n\n  <h1>Empresas</h1>\n\n  <hr/>\n\n  <app-empresas-listagem></app-empresas-listagem>\n</div>\n  \n\n","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmpresaService} from './empresas/empresa.service';\nimport { EmpresasListagemComponent } from './empresas/empresas-listagem/empresas-listagem.component';\nimport { EmpresasCadastroComponent } from './empresas/empresas-cadastro/empresas-cadastro.component';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      EmpresasListagemComponent,\n      EmpresasCadastroComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      AppRoutingModule,\n      FormsModule\n   ],\n   providers: [\n      EmpresaService\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  empresasUrl = 'http://localhost:5000/api/empresas';\n\n  constructor(private http: HttpClient) {}\n\n  listar() {\n    return this.http.get<any[]>(this.empresasUrl);\n  }\n\n  criar(empresa: any){\n    return this.http.post(this.empresasUrl, empresa);\n  }\n}\n","import { EmpresaService } from '../empresa.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-empresas-cadastro',\n  templateUrl: './empresas-cadastro.component.html',\n  styleUrls: ['./empresas-cadastro.component.css']\n})\nexport class EmpresasCadastroComponent implements OnInit {\n\n  empresa: any;\n\n  constructor(private empresaService: EmpresaService) { }\n\n  ngOnInit() {\n    this.empresa = {};\n  }\n\n  criar(frm: NgForm){\n    this.empresaService.criar(this.empresa).subscribe(resposta => {\n       frm.reset();\n    });\n  }\n}\n","<main role=\"main\">\n  <section class=\"my-4\">\n    <div class=\"container\">\n        <h2>Cadastro de empresas</h2>\n    </div>\n  </section>\n  <section>\n    <div class=\"container\">\n      <form method=\"post\" #frm=\"ngForm\" (ngSubmit)=\"criar(frm)\">\n        <div class=\"form-group\">\n          <label for=\"nome\">Nome</label>\n          <input type=\"text\" id=\"nome\" name=\"nome\"\n            class=\"form-control\" placeholder=\"Nome\"\n            [(ngModel)]=\"empresa.nome\" required/>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"cnpj\">CNPJ</label>\n          <input type=\"text\" id=\"cnpj\" name=\"cnpj\"\n            class=\"form-control\" placeholder=\"E-mail\"\n            [(ngModel)]=\"empresa.CNPJ\" required/>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary\"\n          [disabled]=\"frm.invalid\">Salvar</button>\n      </form>\n    </div>\n  </section>","import { Component, OnInit } from '@angular/core';\nimport { EmpresaService } from '../empresa.service';\n\n@Component({\n  selector: 'app-empresas-listagem',\n  templateUrl: './empresas-listagem.component.html',\n  styleUrls: ['./empresas-listagem.component.css'],\n})\nexport class EmpresasListagemComponent implements OnInit {\n  empresas: Array<any>;\n\n  constructor(private empresaService: EmpresaService) {}\n\n  ngOnInit() {\n    this.listar();\n  }\n\n  listar(){\n    this.empresaService.listar().subscribe(dados => this.empresas = dados);\n  }\n}\n","<h2>Listagem</h2>\n\n<ul>\n  <li *ngFor=\"let emp of empresas\">\n    {{emp.id}} - {{emp.nome}}\n  </li>\n</ul>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}