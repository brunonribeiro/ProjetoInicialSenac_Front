{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cargos/cargo.service.ts","webpack:///src/app/cargos/cargos-formulario/cargos-formulario.component.ts","webpack:///src/app/cargos/cargos-formulario/cargos-formulario.component.html","webpack:///src/app/cargos/cargos-listagem/cargos-listagem.component.ts","webpack:///src/app/cargos/cargos-listagem/cargos-listagem.component.html","webpack:///src/app/cargos/cargos.component.ts","webpack:///src/app/cargos/cargos.component.html","webpack:///src/app/common/common.module.ts","webpack:///src/app/common/pipes/cnpj.pipe.ts","webpack:///src/app/common/pipes/cpf.pipe.ts","webpack:///src/app/empresas/empresa.service.ts","webpack:///src/app/empresas/empresas-formulario/empresas-formulario.component.ts","webpack:///src/app/empresas/empresas-formulario/empresas-formulario.component.html","webpack:///src/app/empresas/empresas-listagem/empresas-listagem.component.ts","webpack:///src/app/empresas/empresas-listagem/empresas-listagem.component.html","webpack:///src/app/empresas/empresas.component.ts","webpack:///src/app/empresas/empresas.component.html","webpack:///src/app/funcionarios/funcionario.service.ts","webpack:///src/app/funcionarios/funcionarios-cargo/funcionarios-cargo.component.ts","webpack:///src/app/funcionarios/funcionarios-cargo/funcionarios-cargo.component.html","webpack:///src/app/funcionarios/funcionarios-empresa/funcionarios-empresa.component.ts","webpack:///src/app/funcionarios/funcionarios-empresa/funcionarios-empresa.component.html","webpack:///src/app/funcionarios/funcionarios-formulario/funcionarios-formulario.component.ts","webpack:///src/app/funcionarios/funcionarios-formulario/funcionarios-formulario.component.html","webpack:///src/app/funcionarios/funcionarios-listagem/funcionarios-listagem.component.ts","webpack:///src/app/funcionarios/funcionarios-listagem/funcionarios-listagem.component.html","webpack:///src/app/funcionarios/funcionarios.component.ts","webpack:///src/app/funcionarios/funcionarios.component.html","webpack:///src/app/input-control-error/input-control-error.component.ts","webpack:///src/app/input-control-error/input-control-error.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/ngb-date-fr-parser-formatter.ts","webpack:///src/app/validacoes.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","registerForm","Object","controls","forEach","field","controle","markAsTouched","campo","validacao","valid","get","hasError","errors","touched","obj","saveService","subscribe","resposta","location","reload","formIsValid","myStringDate","dateParts","split","result","day","Number","month","year","ex","alert","error","dateToString","date","provide","useClass","selector","templateUrl","styleUrls","providers","AppModule","declarations","bootstrap","CargoService","http","cargosUrl","cargo","success","fail","post","providedIn","CargosFormularioComponent","cargoService","fb","validation","group","descricao","required","assign","value","salvar","salvoComSucesso","erroAoSalvar","patchValue","validAndTouched","criar","modalRef","CargosListagemComponent","modalService","onEditClick","listar","dados","cargos","emit","template","show","cargoExcluir","excluir","CargosComponent","cargoForm","carregarCargo","editClick","AppCommonModule","CnpjPipe","length","substr","name","CpfPipe","EmpresaService","empresasUrl","empresa","EmpresasFormularioComponent","empresaService","nome","cnpj","ValidarCnpj","dataFundacao","toDate","EmpresasListagemComponent","empresas","empresaExcluir","EmpresasComponent","empresaForm","carregarEmpresa","FuncionarioService","funcionariosUrl","funcionario","put","empresaId","cargoId","FuncionariosCargoComponent","funcionarioService","route","loadFuncionario","snapshot","params","atribuirCargo","voltar","href","funcionarioId","buscarPorId","vincular","FuncionariosEmpresaComponent","vincularEmpresa","FuncionariosFormularioComponent","validators","cpf","ValidaCpf","dataContratacao","verificaValidTouched","FuncionariosListagemComponent","funcionarios","funcionarioExcluir","FuncionariosComponent","funcionarioForm","carregarFuncionario","InputControlErrorComponent","NavComponent","padNumber","isNumber","slice","isNaN","toInteger","parseInt","NgbDateFRParserFormatter","trim","stringDate","Validacoes","cnpjInvalido","undefined","replace","tamanho","numeros","substring","digitos","soma","pos","i","charAt","resultado","cpfInvalido","resto","regex","RegExp","test","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmpresasComponent } from './empresas/empresas.component';\nimport { CargosComponent } from './cargos/cargos.component';\nimport { FuncionariosComponent } from './funcionarios/funcionarios.component';\nimport { FuncionariosEmpresaComponent } from './funcionarios/funcionarios-empresa/funcionarios-empresa.component';\nimport { FuncionariosCargoComponent } from './funcionarios/funcionarios-cargo/funcionarios-cargo.component';\n\n\nconst routes: Routes = [\n  { path: 'empresas', component: EmpresasComponent},\n  { path: 'cargos', component: CargosComponent},\n  { path: 'funcionarios', component: FuncionariosComponent},\n  { path: 'funcionarios/:id/empresa', component: FuncionariosEmpresaComponent},\n  { path: 'funcionarios/:id/cargo', component: FuncionariosCargoComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateFRParserFormatter } from './ngb-date-fr-parser-formatter';\nimport { FormGroup } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [\n    { provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter },\n  ],\n})\nexport class AppComponent {\n  title = 'EmpresasApp-DB1';\n\n  static dateToString = (date) => `${date.day}/${date.month}/${date.year}`;\n  static formIsValid(registerForm: FormGroup) {\n    Object.keys(registerForm.controls).forEach((field) => {\n      const controle = registerForm.controls[field];\n      controle.markAsTouched();\n    });\n  }\n\n  static validAndTouched(\n    registerForm: FormGroup,\n    campo: string,\n    validacao: string\n  ) {\n    let valid = false;\n\n    if (validacao !== '') {\n      valid = registerForm.get(campo).hasError(validacao);\n    } else {\n      valid = registerForm.get(campo).errors != null;\n    }\n\n    return valid && registerForm.get(campo).touched;\n  }\n\n  static saveDefault(registerForm: FormGroup, obj: any, saveService) {\n    if (registerForm.valid) {\n      saveService(obj).subscribe((resposta) => {\n        location.reload();\n      });\n    } else {\n      this.formIsValid(registerForm);\n    }\n  }\n\n  static toDate(myStringDate: string) {\n    const dateParts = myStringDate.split('/');\n    const result = {\n      day: Number(dateParts[0]),\n      month: Number(dateParts[1]),\n      year: Number(dateParts[2]),\n    };\n    return result;\n  }\n\n  static salvoComSucesso() {\n    location.reload();\n  }\n\n  static erroAoSalvar(ex: HttpErrorResponse) {\n    alert(ex.error);\n  }\n}\n","<app-nav></app-nav>\n<div class=\"content\" role=\"main\">\n  <router-outlet></router-outlet>\n</div>\n\n","import { AppCommonModule } from './common/common.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { InputControlErrorComponent } from './input-control-error/input-control-error.component';\nimport { EmpresaService} from './empresas/empresa.service';\nimport { EmpresasComponent } from './empresas/empresas.component';\nimport { EmpresasListagemComponent } from './empresas/empresas-listagem/empresas-listagem.component';\nimport { EmpresasFormularioComponent } from './empresas/empresas-formulario/empresas-formulario.component';\nimport { CargoService } from './cargos/cargo.service';\nimport { CargosComponent } from './cargos/cargos.component';\nimport { CargosFormularioComponent } from './cargos/cargos-formulario/cargos-formulario.component';\nimport { CargosListagemComponent } from './cargos/cargos-listagem/cargos-listagem.component';\nimport { FuncionariosComponent } from './funcionarios/funcionarios.component';\nimport { FuncionariosListagemComponent } from './funcionarios/funcionarios-listagem/funcionarios-listagem.component';\nimport { FuncionariosFormularioComponent } from './funcionarios/funcionarios-formulario/funcionarios-formulario.component';\nimport { NavComponent } from './nav/nav.component';\nimport { FuncionariosEmpresaComponent } from './funcionarios/funcionarios-empresa/funcionarios-empresa.component';\nimport { FuncionariosCargoComponent } from './funcionarios/funcionarios-cargo/funcionarios-cargo.component';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      InputControlErrorComponent,\n      NavComponent,\n      EmpresasListagemComponent,\n      EmpresasComponent,\n      EmpresasFormularioComponent,\n      CargosComponent,\n      CargosFormularioComponent,\n      CargosListagemComponent,\n      FuncionariosComponent,\n      FuncionariosListagemComponent,\n      FuncionariosFormularioComponent,\n      FuncionariosEmpresaComponent,\n      FuncionariosCargoComponent\n   ],\n   imports: [\n      AppCommonModule,\n      BrowserModule,\n      HttpClientModule,\n      AppRoutingModule,\n      FormsModule,\n      NgbModule,\n      ReactiveFormsModule,\n      ModalModule.forRoot(),\n      NgxMaskModule.forRoot()\n   ],\n   providers: [\n      EmpresaService,\n      CargoService\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Cargo } from '../_models/Cargo';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CargoService {\n  cargosUrl = 'http://localhost:5000/api/cargos';\n\n  constructor(private http: HttpClient) {}\n\n  listar() {\n    return this.http.get<Cargo[]>(this.cargosUrl);\n  }\n\n  salvar(cargo: Cargo, success: any, fail: any) {\n    this.http.post(this.cargosUrl, cargo).subscribe(\n      (resposta) => {\n        success(resposta);\n      },\n      (ex) => {\n        fail(ex);\n      }\n    );\n  }\n\n  excluir(cargo: Cargo) {\n    return this.http.delete(this.cargosUrl + '/' + cargo.id);\n  }\n}\n","import { AppComponent } from './../../app.component';\nimport { CargoService } from './../cargo.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-cargos-formulario',\n  templateUrl: './cargos-formulario.component.html',\n  styleUrls: ['./cargos-formulario.component.css'],\n})\nexport class CargosFormularioComponent implements OnInit {\n  constructor(private cargoService: CargoService, private fb: FormBuilder) {}\n\n  cargo: any;\n  registerForm: FormGroup;\n\n  ngOnInit() {\n    this.cargo = {};\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      descricao: ['', Validators.required],\n    });\n  }\n\n  criar() {\n    if (this.registerForm.valid) {\n      this.cargo = Object.assign({id: this.cargo.id}, this.registerForm.value);\n\n      this.cargoService.salvar(\n        this.cargo,\n        AppComponent.salvoComSucesso,\n        AppComponent.erroAoSalvar\n      );\n    } else {\n      AppComponent.formIsValid(this.registerForm);\n    }\n  }\n\n  carregarCargo({ ...obj }) {\n    this.cargo = obj;\n    this.registerForm.patchValue(obj);\n  }\n\n  verificaValidTouched(campo: string, validacao: string) {\n    return AppComponent.validAndTouched(this.registerForm, campo, validacao);\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Cadastro de cargos</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form [formGroup]=\"registerForm\" method=\"post\" >\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"descricao\">Descrição</label>\n          <input \n             type=\"text\"\n            id=\"descricao\"\n            class=\"form-control\"\n            formControlName=\"descricao\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('descricao', '') }\"\n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('descricao', 'required')\" msgErro=\"A Descrição é obrigatória.\"></app-input-control-error>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"criar()\">\n        Salvar\n      </button>\n    </form>\n  </div>\n</section>\n","import { Component, OnInit, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { CargoService } from './../cargo.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Cargo } from 'src/app/_models/Cargo';\n@Component({\n  selector: 'app-cargos-listagem',\n  templateUrl: './cargos-listagem.component.html',\n  styleUrls: ['./cargos-listagem.component.css']\n})\nexport class CargosListagemComponent implements OnInit {\n  cargos: Array<Cargo>;\n  cargoExcluir: any;\n  modalRef: BsModalRef;\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output() onEditClick = new EventEmitter<any>();\n\n\n  constructor(\n    private cargoService: CargoService,\n    private modalService: BsModalService\n    ) {}\n\n  ngOnInit() {\n    this.listar();\n  }\n\n  listar(){\n    this.cargoService.listar().subscribe(dados => this.cargos = dados);\n  }\n\n  alterar(cargo: Cargo){\n    this.onEditClick.emit(cargo);\n  }\n\n  openModal(template: TemplateRef<any>, cargo: Cargo){\n      this.modalRef = this.modalService.show(template);\n      this.cargoExcluir = cargo;\n  }\n\n  excluirRegistro(cargo: Cargo){\n    this.cargoService.excluir(cargo).subscribe((resposta) => {\n      location.reload();\n    });\n  }\n\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Listagem de cargos</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Descrição</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let car of cargos\">\n          <th scope=\"row\">{{ car.id }}</th>\n          <td>\n            {{ car.descricao | uppercase }}\n          </td>\n          <td>\n            <button\n              class=\"btn btn-primary btn-space\" \n              (click)=\"alterar(car)\"\n            >\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-danger\" (click)=\"openModal(template, car)\"><i class=\"fas fa-trash\"></i></button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ng-template #template>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Excluir item</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Confirma a exclusão do registro?</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-dark\" (click)=\"modalRef.hide()\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"excluirRegistro(cargoExcluir)\">Excluir</button>\n      </div>\n  </ng-template>\n  </div>\n</section>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CargosFormularioComponent } from './cargos-formulario/cargos-formulario.component';\n\n@Component({\n  selector: 'app-cargos',\n  templateUrl: './cargos.component.html'\n})\nexport class CargosComponent implements OnInit {\n  @ViewChild(CargosFormularioComponent)  cargoForm: CargosFormularioComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  editClick(cargo: { [x: string]: any; }) {\n    this.cargoForm.carregarCargo(cargo);\n  }\n}\n","<app-cargos-formulario></app-cargos-formulario>\n<app-cargos-listagem (onEditClick)=\"editClick($event)\"></app-cargos-listagem>","import { CpfPipe } from './pipes/cpf.pipe';\nimport { CnpjPipe } from './pipes/cnpj.pipe';\nimport localePt from '@angular/common/locales/pt';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\nregisterLocaleData(localePt);\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    HttpClientModule,\n    RouterModule\n  ],\n  providers: [\n  ],\n   declarations: [\n    CnpjPipe,\n    CpfPipe\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    HttpClientModule,\n    RouterModule,\n    CnpjPipe,\n    CpfPipe\n  ]\n})\nexport class AppCommonModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cnpj'\n})\n\nexport class CnpjPipe implements PipeTransform {\n  transform(value: string): string {\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    if (value && value.length === 14) {\n      return `${value.substr(0, 2)}.${value.substr(2, 3)}.${value.substr(5, 3)}/${value.substr(8, 4)}-${value.substr(12, 2)}`;\n    }\n\n    return value;\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'cpf'\n})\n\nexport class CpfPipe implements PipeTransform {\n    transform(value: string): string {\n        if (typeof value !== 'string') {\n            return value;\n        }\n\n        if (value && value.length === 11) {\n            return `${value.substr(0, 3)}.${value.substr(3, 3)}.${value.substr(6, 3)}-${value.substr(9, 2)}`;\n        }\n\n        return value;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmpresaService {\n  empresasUrl = 'http://localhost:5000/api/empresas';\n\n  constructor(private http: HttpClient) {}\n\n  listar() {\n    return this.http.get<any[]>(this.empresasUrl);\n  }\n\n  salvar(empresa: any, success: any, fail: any) {\n    return this.http.post(this.empresasUrl, empresa).subscribe(\n      (resposta) => {\n        success(resposta);\n      },\n      (ex) => {\n        fail(ex);\n      }\n    );\n  }\n\n  excluir(empresa: any) {\n    return this.http.delete(this.empresasUrl + '/' + empresa.id);\n  }\n}\n","import { EmpresaService } from '../empresa.service';\nimport { Validacoes } from '../../validacoes';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-empresas-formulario',\n  templateUrl: './empresas-formulario.component.html',\n  styleUrls: ['./empresas-formulario.component.css'],\n})\nexport class EmpresasFormularioComponent implements OnInit {\n  constructor(\n    private empresaService: EmpresaService,\n    private fb: FormBuilder\n  ) {}\n\n  empresa: any;\n  registerForm: FormGroup;\n\n  ngOnInit() {\n    this.empresa = {};\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      nome: ['', [Validators.required]],\n      cnpj: ['', [Validators.required, Validacoes.ValidarCnpj]],\n      dataFundacao: [],\n    });\n  }\n\n  criar() {\n    if (this.registerForm.valid) {\n      this.empresa = Object.assign({id: this.empresa.id}, this.registerForm.value);\n\n      if (this.empresa.dataFundacao) {\n        this.empresa.dataFundacao = AppComponent.dateToString(\n          this.empresa.dataFundacao\n        );\n      }\n\n      this.empresaService.salvar(\n        this.empresa,\n        AppComponent.salvoComSucesso,\n        AppComponent.erroAoSalvar\n      );\n    } else {\n      AppComponent.formIsValid(this.registerForm);\n    }\n  }\n\n  carregarEmpresa({ ...obj }) {\n    if (obj.dataFundacao) {\n      obj.dataFundacao = AppComponent.toDate(obj.dataFundacao);\n    }\n    this.empresa = obj;\n    this.registerForm.patchValue(obj);\n  }\n\n  verificaValidTouched(campo: string, validacao: string) {\n    return AppComponent.validAndTouched(this.registerForm, campo, validacao);\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Cadastro de empresas</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form [formGroup]=\"registerForm\" method=\"post\" >\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"nome\">Nome</label>\n          <input \n             type=\"text\"\n            id=\"nome\"\n            class=\"form-control\"\n            formControlName=\"nome\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('nome', '') }\"\n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('nome', 'required')\" msgErro=\"O Nome é obrigatório.\"></app-input-control-error>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"cnpj\">CNPJ</label>\n          <input\n            type=\"text\"\n            id=\"cnpj\"\n            class=\"form-control\"\n            mask=\"00.000.000/0000-00\"\n            formControlName=\"cnpj\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('cnpj', '') }\"           \n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cnpj', 'required')\" msgErro=\"CNPJ está obrigatório.\"></app-input-control-error>\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cnpj', 'mask')\" msgErro=\"CNPJ está inválido.\"></app-input-control-error>\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cnpj', 'cnpjInvalido')\" msgErro=\"CNPJ está inválido.\"></app-input-control-error>\n        </div>\n\n        <div class=\"form-group col-md-2\">\n          <label for=\"dataFundacao\">Data Fundação</label>\n          <div class=\"input-group\">\n            <input\n              id=\"dataFundacao\"\n              class=\"form-control\"\n              formControlName=\"dataFundacao\"\n              placeholder=\"dd/mm/yyyy\"\n              ngbDatepicker\n              #d=\"ngbDatepicker\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                class=\"btn btn-outline-secondary\"\n                (click)=\"d.toggle()\"\n                type=\"button\"\n              >\n                <i class=\"fas fa-calendar-alt\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"criar()\">\n        Salvar\n      </button>\n    </form>\n  </div>\n</section>\n","import { Component, OnInit, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { EmpresaService } from '../empresa.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-empresas-listagem',\n  templateUrl: './empresas-listagem.component.html',\n  styleUrls: ['./empresas-listagem.component.css'],\n})\nexport class EmpresasListagemComponent implements OnInit {\n  empresas: Array<any>;\n  empresaExcluir: any;\n  modalRef: BsModalRef;\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output() onEditClick = new EventEmitter<any>();\n\n\n  constructor(\n    private empresaService: EmpresaService,\n    private modalService: BsModalService\n    ) {}\n\n  ngOnInit() {\n    this.listar();\n  }\n\n  listar(){\n    this.empresaService.listar().subscribe(dados => this.empresas = dados);\n  }\n\n  alterar(empresa: any){\n    this.onEditClick.emit(empresa);\n  }\n\n  openModal(template: TemplateRef<any>, empresa: any){\n      this.modalRef = this.modalService.show(template);\n      this.empresaExcluir = empresa;\n  }\n\n  excluirRegistro(empresa: any){\n    this.empresaService.excluir(empresa).subscribe((resposta) => {\n      location.reload();\n    });\n  }\n\n\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Listagem de empresas</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Nome</th>\n          <th scope=\"col\">CNPJ</th>\n          <th scope=\"col\">Data Fundação</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let emp of empresas\">\n          <th scope=\"row\">{{ emp.id }}</th>\n          <td>\n            {{ emp.nome }}\n          </td>\n          <td>{{ emp.cnpj | cnpj }}</td>\n          <td>{{ emp.dataFundacao }}</td>\n          <td>\n            <button\n              class=\"btn btn-primary btn-space\"\n              (click)=\"alterar(emp)\"\n            >\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-danger\" (click)=\"openModal(template, emp)\"><i class=\"fas fa-trash\"></i></button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ng-template #template>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Excluir item</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Confirma a exclusão do registro?</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-dark\" (click)=\"modalRef.hide()\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"excluirRegistro(empresaExcluir)\">Excluir</button>\n      </div>\n  </ng-template>\n  </div>\n</section>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { EmpresasFormularioComponent } from './empresas-formulario/empresas-formulario.component';\r\n\r\n@Component({\r\n  selector: 'app-empresas',\r\n  templateUrl: './empresas.component.html',\r\n})\r\nexport class EmpresasComponent implements OnInit {\r\n  @ViewChild(EmpresasFormularioComponent)  empresaForm: EmpresasFormularioComponent;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {  }\r\n\r\n  editClick(empresa: { [x: string]: any; }) {\r\n    this.empresaForm.carregarEmpresa(empresa);\r\n  }\r\n}\r\n","<app-empresas-formulario></app-empresas-formulario>\n<app-empresas-listagem (onEditClick)=\"editClick($event)\"></app-empresas-listagem>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Funcionario } from '../_models/Funcionario';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FuncionarioService {\n  funcionariosUrl = 'http://localhost:5000/api/funcionarios';\n\n  constructor(private http: HttpClient) {}\n\n  listar(): Observable<Funcionario[]> {\n    return this.http.get<Funcionario[]>(this.funcionariosUrl);\n  }\n\n  salvar(funcionario: any, success: any, fail: any) {\n    return this.http.post(this.funcionariosUrl, funcionario).subscribe(\n      (resposta) => {\n        success(resposta);\n      },\n      (ex) => {\n        fail(ex);\n      }\n    );\n  }\n\n  excluir(funcionario: Funcionario) {\n    return this.http.delete(this.funcionariosUrl + '/' + funcionario.id);\n  }\n\n  buscarPorId(id: number): Observable<Funcionario> {\n    return this.http.get<Funcionario>(`${this.funcionariosUrl}/${id}`);\n  }\n\n  vincularEmpresa(funcionario: Funcionario, success: any, fail: any) {\n    this.http\n      .put<Funcionario>(\n        `${this.funcionariosUrl}/${funcionario.id}/vincularempresa/${funcionario.empresaId}`,\n        funcionario\n      )\n      .subscribe(\n        (resposta) => {\n          success(resposta);\n        },\n        (ex) => {\n          fail(ex);\n        }\n      );\n  }\n\n  atribuirCargo(funcionario: Funcionario, success: any, fail: any) {\n    this.http\n      .put<Funcionario>(\n        `${this.funcionariosUrl}/${funcionario.id}/atribuircargo/${funcionario.cargoId}`,\n        funcionario\n      )\n      .subscribe(\n        (resposta) => {\n          success(resposta);\n        },\n        (ex) => {\n          fail(ex);\n        }\n      );\n  }\n}\n","import { CargoService } from './../../cargos/cargo.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FuncionarioService } from '../funcionario.service';\nimport { Subscription } from 'rxjs';\nimport { Funcionario } from 'src/app/_models/Funcionario';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-funcionarios-cargo',\n  templateUrl: './funcionarios-cargo.component.html',\n  styleUrls: ['./funcionarios-cargo.component.css'],\n})\nexport class FuncionariosCargoComponent implements OnInit {\n  routeSub: Subscription;\n  cargos: Array<any>;\n  funcionario: Funcionario;\n  registerForm: FormGroup;\n\n  constructor(\n    private cargoService: CargoService,\n    private funcionarioService: FuncionarioService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.funcionario = {} as Funcionario;\n    this.loadFuncionario(this.route.snapshot.params.id);\n\n    this.cargoService.listar().subscribe((dados) => {\n      this.cargos = dados;\n    });\n\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      nome: [],\n      cargoId: ['', [Validators.required]],\n    });\n  }\n\n  vincular() {\n    if (this.registerForm.valid) {\n      this.funcionarioService.atribuirCargo(\n        this.funcionario,\n        this.voltar,\n        AppComponent.erroAoSalvar\n      );\n    } else {\n      AppComponent.formIsValid(this.registerForm);\n    }\n  }\n\n  voltar() {\n    location.href = '/funcionarios';\n  }\n\n  loadFuncionario(funcionarioId: number) {\n    this.funcionarioService.buscarPorId(funcionarioId).subscribe((result) => {\n      this.funcionario = result;\n    });\n  }\n\n  verificaValidTouched(campo: string, validacao: string) {\n    return AppComponent.validAndTouched(this.registerForm, campo, validacao);\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Vincular funcionário a um cargo</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form [formGroup]=\"registerForm\" method=\"post\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label>Nome</label>\n          <input\n            type=\"text\"\n            name=\"nome\"\n            [(ngModel)]=\"funcionario.nome\"\n            formControlName=\"nome\"    \n            class=\"form-control\"\n            disabled\n          />\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"cargoId\">Cargo</label>\n\n          <select class=\"form-control\" \n                  name=\"cargoId\"   \n                  formControlName=\"cargoId\"\n                  [(ngModel)]=\"funcionario.cargoId\"  \n                  [ngClass]=\"{ 'is-invalid': verificaValidTouched('cargoId', '') }\">>\n            <option value=\"\">--Selecione um Cargo--</option>\n            <option *ngFor=\"let car of cargos\" value=\"{{ car.id }}\">\n              {{ car.descricao }}\n            </option>\n          </select>\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cargoId', 'required')\" msgErro=\"O Cargo é obrigatório.\"></app-input-control-error>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-primary btn-space\" (click)=\"vincular()\">\n        Salvar\n      </button>\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"voltar()\">\n        Cancelar\n      </button>\n    </form>\n  </div>\n</section>\n","import { FuncionarioService } from './../funcionario.service';\nimport { EmpresaService } from './../../empresas/empresa.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { Funcionario } from 'src/app/_models/Funcionario';\nimport { AppComponent } from 'src/app/app.component';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-funcionarios-empresa',\n  templateUrl: './funcionarios-empresa.component.html',\n  styleUrls: ['./funcionarios-empresa.component.css'],\n})\nexport class FuncionariosEmpresaComponent implements OnInit {\n  routeSub: Subscription;\n  empresas: Array<any>;\n  funcionario: Funcionario;\n  registerForm: FormGroup;\n\n  constructor(\n    private empresaService: EmpresaService,\n    private funcionarioService: FuncionarioService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.funcionario = {} as Funcionario;\n    this.loadFuncionario(this.route.snapshot.params.id);\n\n    this.empresaService.listar().subscribe((dados) => {\n      this.empresas = dados;\n    });\n\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      nome: [],\n      empresaId: ['', [Validators.required]],\n    });\n  }\n\n  vincular() {\n    if (this.registerForm.valid) {\n      this.funcionarioService.vincularEmpresa(\n        this.funcionario,\n        this.voltar,\n        AppComponent.erroAoSalvar\n      );\n    } else {\n      AppComponent.formIsValid(this.registerForm);\n    }\n  }\n\n  voltar() {\n    location.href = '/funcionarios';\n  }\n\n  loadFuncionario(funcionarioId: number) {\n    this.funcionarioService.buscarPorId(funcionarioId).subscribe((result) => {\n      this.funcionario = result;\n    });\n  }\n\n  verificaValidTouched(campo: string, validacao: string) {\n    return AppComponent.validAndTouched(this.registerForm, campo, validacao);\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Vincular funcionário a uma empresa</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form [formGroup]=\"registerForm\" method=\"post\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label>Nome</label>\n          <input\n            type=\"text\"\n            name=\"nome\"\n            [(ngModel)]=\"funcionario.nome\"\n            formControlName=\"nome\"\n            class=\"form-control\"\n            disabled            \n          />\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"empresaId\">Empresa</label>\n\n          <select class=\"form-control\" \n                  name=\"empresaId\"\n                  formControlName=\"empresaId\"\n                  [(ngModel)]=\"funcionario.empresaId\"  \n                  [ngClass]=\"{ 'is-invalid': verificaValidTouched('empresaId', '') }\">\n            <option value=\"\">--Selecione uma Empresa--</option>\n            <option *ngFor=\"let emp of empresas\" value=\"{{ emp.id }}\">\n              {{ emp.nome }}\n            </option>\n          </select>\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('empresaId', 'required')\" msgErro=\"A Empresa é obrigatória.\"></app-input-control-error>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-primary btn-space\" (click)=\"vincular()\">\n        Salvar\n      </button>\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"voltar()\">\n        Cancelar\n      </button>\n    </form>\n  </div>\n</section>\n","import { FuncionarioService } from '../funcionario.service';\nimport { Validacoes } from '../../validacoes';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-funcionarios-formulario',\n  templateUrl: './funcionarios-formulario.component.html',\n  styleUrls: ['./funcionarios-formulario.component.css'],\n})\nexport class FuncionariosFormularioComponent implements OnInit {\n  constructor(\n    private funcionarioService: FuncionarioService,\n    private fb: FormBuilder\n  ) {}\n\n  funcionario: any;\n  registerForm: FormGroup;\n\n  ngOnInit() {\n    this.funcionario = {};\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      nome: ['', { validators: Validators.required }],\n      cpf: ['', { validators: [Validators.required, Validacoes.ValidaCpf] }],\n      dataContratacao: [],\n    });\n  }\n\n  criar() {\n    if (this.registerForm.valid) {\n      if (this.funcionario.dataContratacao) {\n        this.funcionario.dataContratacao = AppComponent.dateToString(\n          this.funcionario.dataContratacao\n        );\n      }\n\n      this.funcionarioService.salvar(\n        this.funcionario,\n        AppComponent.salvoComSucesso,\n        AppComponent.erroAoSalvar\n      );\n    } else {\n      AppComponent.formIsValid(this.registerForm);\n    }\n  }\n\n  carregarFuncionario({ ...obj }) {\n    if (obj.dataContratacao) {\n      obj.dataContratacao = AppComponent.toDate(obj.dataContratacao);\n    }\n    this.funcionario = obj;\n  }\n\n  verificaValidTouched(campo: string, validacao: string) {\n    return AppComponent.validAndTouched(this.registerForm, campo, validacao);\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Cadastro de funcionarios</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form [formGroup]=\"registerForm\" method=\"post\" >\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"nome\">Nome</label>\n          <input \n             type=\"text\"\n            id=\"nome\"\n            class=\"form-control\"\n            formControlName=\"nome\"\n            [(ngModel)]=\"funcionario.nome\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('nome', '') }\"\n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('nome', 'required')\" msgErro=\"O Nome é obrigatório.\"></app-input-control-error>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"cpf\">CPF</label>\n          <input\n            type=\"text\"\n            id=\"cpf\"\n            class=\"form-control\"\n            mask=\"000.000.000-00\"\n            [(ngModel)]=\"funcionario.cpf\"\n            formControlName=\"cpf\"\n            (change)=\"verificaValidTouched('cpf', '')\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('cpf', '') }\"           \n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cpf', 'required')\" msgErro=\"CPF está obrigatório.\"></app-input-control-error>\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cpf', 'cpfInvalido')\" msgErro=\"CPF está inválido.\"></app-input-control-error>\n        </div>\n\n        <div class=\"form-group col-md-2\">\n          <label for=\"dataContratacao\">Data Contratação</label>\n          <div class=\"input-group\">\n            <input\n              id=\"dataContratacao\"\n              class=\"form-control\"\n              formControlName=\"dataContratacao\"\n              placeholder=\"dd/mm/yyyy\"\n              [(ngModel)]=\"funcionario.dataContratacao\"\n              ngbDatepicker\n              #d=\"ngbDatepicker\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                class=\"btn btn-outline-secondary\"\n                (click)=\"d.toggle()\"\n                type=\"button\"\n              >\n                <i class=\"fas fa-calendar-alt\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"criar()\">\n        Salvar\n      </button>\n    </form>\n  </div>\n</section>\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  TemplateRef,\n} from '@angular/core';\nimport { FuncionarioService } from './../funcionario.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Funcionario } from 'src/app/_models/Funcionario';\n@Component({\n  selector: 'app-funcionarios-listagem',\n  templateUrl: './funcionarios-listagem.component.html',\n  styleUrls: ['./funcionarios-listagem.component.css'],\n})\nexport class FuncionariosListagemComponent implements OnInit {\n  funcionarios: Array<any>;\n  funcionarioExcluir: any;\n  modalRef: BsModalRef;\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output() onEditClick = new EventEmitter<any>();\n\n  constructor(\n    private funcionarioService: FuncionarioService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.listar();\n  }\n\n  listar() {\n    this.funcionarioService\n      .listar()\n      .subscribe((dados) => (this.funcionarios = dados));\n  }\n\n  alterar(funcionario: Funcionario) {\n    this.onEditClick.emit(funcionario);\n  }\n\n  openModal(template: TemplateRef<any>, funcionario: any) {\n    this.modalRef = this.modalService.show(template);\n    this.funcionarioExcluir = funcionario;\n  }\n\n  excluirRegistro(funcionario: Funcionario) {\n    this.funcionarioService.excluir(funcionario).subscribe((resposta) => {\n      location.reload();\n    });\n  }\n\n  abrirEmpresa(funcionario: Funcionario) {\n    location.href = `/funcionarios/${funcionario.id}/empresa`;\n  }\n\n  abrirCargo(funcionario: Funcionario) {\n    location.href = `/funcionarios/${funcionario.id}/cargo`;\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Listagem de funcionarios</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Nome</th>\n          <th scope=\"col\">CPF</th>\n          <th scope=\"col\">Empresa</th>\n          <th scope=\"col\">Cargo</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let fun of funcionarios\">\n          <th scope=\"row\">{{ fun.id }}</th>\n          <td>\n            {{ fun.nome }}\n          </td>\n          <td>{{ fun.cpf | cpf }}</td>\n          <td>{{ fun.empresa }}</td>\n          <td>{{ fun.cargo }}</td>\n          <td>\n            <button class=\"btn btn-primary btn-space\" (click)=\"alterar(fun)\"><i class=\"fas fa-edit\"></i></button>\n            <button class=\"btn btn-primary btn-space\" (click)=\"abrirEmpresa(fun)\">Empresa</button>\n            <button class=\"btn btn-primary btn-space\" (click)=\"abrirCargo(fun)\" [disabled]=\"fun.empresa == null\">Cargo</button>\n            <button class=\"btn btn-danger\"  (click)=\"openModal(template, fun)\"><i class=\"fas fa-trash\"></i></button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ng-template #template>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Excluir item</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Confirma a exclusão do registro?</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-dark\" (click)=\"modalRef.hide()\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"excluirRegistro(funcionarioExcluir)\">Excluir</button>\n      </div>\n  </ng-template>\n  </div>\n</section>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FuncionariosFormularioComponent } from './funcionarios-formulario/funcionarios-formulario.component';\n\n@Component({\n  selector: 'app-funcionarios',\n  templateUrl: './funcionarios.component.html'\n})\nexport class FuncionariosComponent implements OnInit {\n  @ViewChild(FuncionariosFormularioComponent)  funcionarioForm: FuncionariosFormularioComponent;\n\n  constructor() {}\n\n  ngOnInit() {  }\n\n  editClick(funcionario: { [x: string]: any; }) {\n    this.funcionarioForm.carregarFuncionario(funcionario);\n  }\n\n}\n","<app-funcionarios-formulario></app-funcionarios-formulario>\r\n<app-funcionarios-listagem (onEditClick)=\"editClick($event)\"></app-funcionarios-listagem>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-input-control-error',\n  templateUrl: './input-control-error.component.html'\n})\nexport class InputControlErrorComponent implements OnInit {\n\n  @Input() mostrarErro: boolean;\n  @Input() msgErro: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","<div *ngIf=\"mostrarErro\" class=\"invalid-feedback\" style=\"display: block;\"> {{msgErro}}</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  title = 'EmpresasApp-DB1';\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">{{ title }}</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarNavAltMarkup\"\n    aria-controls=\"navbarNavAltMarkup\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <div class=\"navbar-nav\">\n      <a class=\"nav-item nav-link\" href=\"empresas\">Empresas </a>\n      <a class=\"nav-item nav-link\" href=\"funcionarios\">Funcionários</a>\n      <a class=\"nav-item nav-link\" href=\"cargos\">Cargos</a>\n    </div>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nfunction padNumber(value: number) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    } else {\n        return '';\n    }\n}\n\nfunction isNumber(value: any): boolean {\n    return !isNaN(toInteger(value));\n}\n\nfunction toInteger(value: any): number {\n    return parseInt(`${value}`, 10);\n}\n\n\n@Injectable()\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\n    parse(value: string): NgbDateStruct {\n        if (value) {\n            const dateParts = value.trim().split('/');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return {year: toInteger(dateParts[0]), month: null, day: null};\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\n            }\n        }\n        return null;\n    }\n\n    format(date: NgbDateStruct): string {\n        let stringDate = '';\n        if (date) {\n            stringDate += isNumber(date.day) ? padNumber(date.day) + '/' : '';\n            stringDate += isNumber(date.month) ? padNumber(date.month) + '/' : '';\n            stringDate += date.year;\n        }\n        return stringDate;\n    }\n}\n","import { AbstractControl } from '../../node_modules/@angular/forms';\r\nimport { toInteger } from '@ng-bootstrap/ng-bootstrap/util/util';\r\n\r\nexport class Validacoes {\r\n  static ValidarCnpj(controle: AbstractControl) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let cnpjInvalido = { cnpjInvalido: true };\r\n    let cnpj = controle.value;\r\n\r\n    if (cnpj === undefined) {\r\n      return null;\r\n    }\r\n\r\n    cnpj = cnpj.replace(/[^\\d]+/g, '');\r\n\r\n    if (cnpj === '') {\r\n      return null;\r\n    }\r\n\r\n    if (cnpj.length !== 14) {\r\n      return null;\r\n    }\r\n\r\n    // Elimina CNPJs invalidos conhecidos\r\n    if (\r\n      cnpj === '00000000000000' ||\r\n      cnpj === '11111111111111' ||\r\n      cnpj === '22222222222222' ||\r\n      cnpj === '33333333333333' ||\r\n      cnpj === '44444444444444' ||\r\n      cnpj === '55555555555555' ||\r\n      cnpj === '66666666666666' ||\r\n      cnpj === '77777777777777' ||\r\n      cnpj === '88888888888888' ||\r\n      cnpj === '99999999999999'\r\n    ) {\r\n      return cnpjInvalido;\r\n    }\r\n\r\n    // Valida DVs\r\n    let tamanho = cnpj.length - 2;\r\n    let numeros = cnpj.substring(0, tamanho);\r\n    const digitos = cnpj.substring(tamanho);\r\n    let soma = 0;\r\n    let pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2) {\r\n        pos = 9;\r\n      }\r\n    }\r\n    let resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);\r\n    if (resultado !== Number(digitos.charAt(0))) {\r\n      return cnpjInvalido;\r\n    }\r\n    tamanho = tamanho + 1;\r\n    numeros = cnpj.substring(0, tamanho);\r\n    soma = 0;\r\n    pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2) {\r\n        pos = 9;\r\n      }\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);\r\n    if (resultado !== Number(digitos.charAt(1))) {\r\n      return cnpjInvalido;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static ValidaCpf(controle: AbstractControl) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let cpfInvalido = { cpfInvalido: true };\r\n    const cpf = controle.value;\r\n\r\n    let soma = 0;\r\n    let resto: number;\r\n\r\n    const regex = new RegExp('[0-9]{11}');\r\n\r\n    if (cpf === '' || cpf === undefined) {\r\n      return null;\r\n    }\r\n\r\n    if (\r\n      cpf === '00000000000' ||\r\n      cpf === '11111111111' ||\r\n      cpf === '22222222222' ||\r\n      cpf === '33333333333' ||\r\n      cpf === '44444444444' ||\r\n      cpf === '55555555555' ||\r\n      cpf === '66666666666' ||\r\n      cpf === '77777777777' ||\r\n      cpf === '88888888888' ||\r\n      cpf === '99999999999' ||\r\n      !regex.test(cpf)\r\n    ) {\r\n      return cpfInvalido;\r\n    }\r\n\r\n    for (let i = 1; i <= 9; i++) {\r\n      soma = soma + Number(cpf.substring(i - 1, i)) * (11 - i);\r\n    }\r\n    resto = (soma * 10) % 11;\r\n\r\n    if (resto === 10 || resto === 11) {\r\n      resto = 0;\r\n    }\r\n    if (resto !== Number(cpf.substring(9, 10))) {\r\n      return cpfInvalido;\r\n    }\r\n\r\n    soma = 0;\r\n    for (let i = 1; i <= 10; i++) {\r\n      soma = soma + Number(cpf.substring(i - 1, i)) * (12 - i);\r\n    }\r\n    resto = (soma * 10) % 11;\r\n\r\n    if (resto === 10 || resto === 11) {\r\n      resto = 0;\r\n    }\r\n    if (resto !== Number(cpf.substring(10, 11))) {\r\n      return cpfInvalido;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}