{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cargos/cargo.service.ts","webpack:///src/app/cargos/cargos-formulario/cargos-formulario.component.ts","webpack:///src/app/cargos/cargos-formulario/cargos-formulario.component.html","webpack:///src/app/cargos/cargos-listagem/cargos-listagem.component.ts","webpack:///src/app/cargos/cargos-listagem/cargos-listagem.component.html","webpack:///src/app/cargos/cargos.component.ts","webpack:///src/app/cargos/cargos.component.html","webpack:///src/app/empresas/empresa.service.ts","webpack:///src/app/empresas/empresas-formulario/empresas-formulario.component.ts","webpack:///src/app/empresas/empresas-formulario/empresas-formulario.component.html","webpack:///src/app/empresas/empresas-listagem/empresas-listagem.component.ts","webpack:///src/app/empresas/empresas-listagem/empresas-listagem.component.html","webpack:///src/app/empresas/empresas.component.ts","webpack:///src/app/empresas/empresas.component.html","webpack:///src/app/funcionarios/funcionario.service.ts","webpack:///src/app/funcionarios/funcionarios-cargo/funcionarios-cargo.component.ts","webpack:///src/app/funcionarios/funcionarios-cargo/funcionarios-cargo.component.html","webpack:///src/app/funcionarios/funcionarios-empresa/funcionarios-empresa.component.ts","webpack:///src/app/funcionarios/funcionarios-empresa/funcionarios-empresa.component.html","webpack:///src/app/funcionarios/funcionarios-formulario/funcionarios-formulario.component.ts","webpack:///src/app/funcionarios/funcionarios-formulario/funcionarios-formulario.component.html","webpack:///src/app/funcionarios/funcionarios-listagem/funcionarios-listagem.component.ts","webpack:///src/app/funcionarios/funcionarios-listagem/funcionarios-listagem.component.html","webpack:///src/app/funcionarios/funcionarios.component.ts","webpack:///src/app/funcionarios/funcionarios.component.html","webpack:///src/app/input-control-error/input-control-error.component.ts","webpack:///src/app/input-control-error/input-control-error.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/ngb-date-fr-parser-formatter.ts","webpack:///src/app/validacoes.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","registerForm","Object","controls","forEach","field","controle","markAsTouched","campo","validacao","valid","get","hasError","errors","touched","obj","saveService","subscribe","resposta","location","reload","formIsValid","myStringDate","dateParts","split","result","day","Number","month","year","dateToString","date","provide","useClass","selector","templateUrl","styleUrls","providers","AppModule","declarations","bootstrap","CargoService","http","cargosUrl","cargo","post","providedIn","CargosFormularioComponent","cargoService","fb","validation","group","descricao","required","salvar","validAndTouched","criar","modalRef","CargosListagemComponent","modalService","onEditClick","listar","dados","cargos","emit","template","show","cargoExcluir","excluir","CargosComponent","cargoForm","carregarCargo","editClick","EmpresaService","empresasUrl","empresa","EmpresasFormularioComponent","empresaService","nome","cnpj","ValidarCnpj","dataFundacao","toDate","EmpresasListagemComponent","empresas","empresaExcluir","EmpresasComponent","empresaForm","carregarEmpresa","FuncionarioService","funcionariosUrl","funcionario","put","empresaId","FuncionariosCargoComponent","funcionarioService","route","routeSub","params","loadFuncionario","vincularEmpresa","href","funcionarioId","buscarPorId","vincular","FuncionariosEmpresaComponent","FuncionariosFormularioComponent","cpf","ValidaCpf","dataContratacao","undefined","FuncionariosListagemComponent","funcionarios","funcionarioExcluir","FuncionariosComponent","funcionarioForm","carregarFuncionario","InputControlErrorComponent","NavComponent","padNumber","value","isNumber","slice","isNaN","toInteger","parseInt","NgbDateFRParserFormatter","trim","length","stringDate","Validacoes","cnpjInvalido","replace","tamanho","numeros","substring","digitos","soma","pos","i","charAt","resultado","cpfInvalido","resto","regex","RegExp","test","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmpresasComponent } from './empresas/empresas.component';\nimport { CargosComponent } from './cargos/cargos.component';\nimport { FuncionariosComponent } from './funcionarios/funcionarios.component';\nimport { FuncionariosEmpresaComponent } from './funcionarios/funcionarios-empresa/funcionarios-empresa.component';\nimport { FuncionariosCargoComponent } from './funcionarios/funcionarios-cargo/funcionarios-cargo.component';\n\n\nconst routes: Routes = [\n  { path: 'empresas', component: EmpresasComponent},\n  { path: 'cargos', component: CargosComponent},\n  { path: 'funcionarios', component: FuncionariosComponent},\n  { path: 'funcionarios/:id/empresa', component: FuncionariosEmpresaComponent},\n  { path: 'funcionarios/:id/cargo', component: FuncionariosCargoComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateFRParserFormatter } from './ngb-date-fr-parser-formatter';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [\n    { provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter },\n  ],\n})\nexport class AppComponent {\n  title = 'EmpresasApp-DB1';\n\n  static dateToString = (date) => `${date.day}/${date.month}/${date.year}`;\n  static formIsValid(registerForm: FormGroup) {\n    Object.keys(registerForm.controls).forEach((field) => {\n      const controle = registerForm.controls[field];\n      controle.markAsTouched();\n    });\n  }\n\n  static validAndTouched(\n    registerForm: FormGroup,\n    campo: string,\n    validacao: string\n  ) {\n    let valid = false;\n\n    if (validacao !== '') {\n      valid = registerForm.get(campo).hasError(validacao);\n    } else {\n      valid = registerForm.get(campo).errors != null;\n    }\n\n    return valid && registerForm.get(campo).touched;\n  }\n\n  static saveDefault(registerForm: FormGroup, obj: any, saveService) {\n    if (registerForm.valid) {\n      saveService(obj).subscribe((resposta) => {\n        location.reload();\n      });\n    } else {\n      this.formIsValid(registerForm);\n    }\n  }\n\n  static toDate(myStringDate: string) {\n    const dateParts = myStringDate.split('/');\n    const result = {\n      day: Number(dateParts[0]),\n      month: Number(dateParts[1]),\n      year: Number(dateParts[2]),\n    };\n    return result;\n  }\n}\n","<app-nav></app-nav>\n<div class=\"content\" role=\"main\">\n  <router-outlet></router-outlet>\n</div>\n\n","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { InputControlErrorComponent } from './input-control-error/input-control-error.component';\nimport { EmpresaService} from './empresas/empresa.service';\nimport { EmpresasComponent } from './empresas/empresas.component';\nimport { EmpresasListagemComponent } from './empresas/empresas-listagem/empresas-listagem.component';\nimport { EmpresasFormularioComponent } from './empresas/empresas-formulario/empresas-formulario.component';\nimport { CargoService } from './cargos/cargo.service';\nimport { CargosComponent } from './cargos/cargos.component';\nimport { CargosFormularioComponent } from './cargos/cargos-formulario/cargos-formulario.component';\nimport { CargosListagemComponent } from './cargos/cargos-listagem/cargos-listagem.component';\nimport { FuncionariosComponent } from './funcionarios/funcionarios.component';\nimport { FuncionariosListagemComponent } from './funcionarios/funcionarios-listagem/funcionarios-listagem.component';\nimport { FuncionariosFormularioComponent } from './funcionarios/funcionarios-formulario/funcionarios-formulario.component';\nimport { NavComponent } from './nav/nav.component';\nimport { FuncionariosEmpresaComponent } from './funcionarios/funcionarios-empresa/funcionarios-empresa.component';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      InputControlErrorComponent,\n      NavComponent,\n      EmpresasListagemComponent,\n      EmpresasComponent,\n      EmpresasFormularioComponent,\n      CargosComponent,\n      CargosFormularioComponent,\n      CargosListagemComponent,\n      FuncionariosComponent,\n      FuncionariosListagemComponent,\n      FuncionariosFormularioComponent,\n      FuncionariosEmpresaComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      AppRoutingModule,\n      FormsModule,\n      NgbModule,\n      ReactiveFormsModule,\n      ModalModule.forRoot(),\n      NgxMaskModule.forRoot()\n   ],\n   providers: [\n      EmpresaService,\n      CargoService\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CargoService {\n  cargosUrl = 'http://localhost:5000/api/cargos';\n\n  constructor(private http: HttpClient) {}\n\n  listar() {\n    return this.http.get<any[]>(this.cargosUrl);\n  }\n\n  salvar(cargo: any) {\n    return this.http.post(this.cargosUrl, cargo);\n  }\n\n  excluir(cargo: any){\n    return this.http.delete(this.cargosUrl + '/' + cargo.id);\n  }\n}\n","import { AppComponent } from './../../app.component';\nimport { CargoService } from './../cargo.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-cargos-formulario',\n  templateUrl: './cargos-formulario.component.html',\n  styleUrls: ['./cargos-formulario.component.css'],\n})\nexport class CargosFormularioComponent implements OnInit {\n  constructor(private cargoService: CargoService, private fb: FormBuilder) {}\n\n  cargo: any;\n  registerForm: FormGroup;\n\n  ngOnInit() {\n    this.cargo = {};\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      descricao: ['', Validators.required],\n    });\n  }\n\n  criar() {\n    if (this.registerForm.valid) {\n      this.cargoService.salvar(this.cargo).subscribe((resposta) => {\n        location.reload();\n      });\n    } else {\n      AppComponent.formIsValid(this.registerForm);\n    }\n  }\n\n  carregarCargo({ ...obj }) {\n    this.cargo = obj;\n  }\n\n  verificaValidTouched(campo: string, validacao: string) {\n    return AppComponent.validAndTouched(this.registerForm, campo, validacao);\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Cadastro de cargos</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form [formGroup]=\"registerForm\" method=\"post\" >\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"descricao\">Descrição</label>\n          <input \n             type=\"text\"\n            id=\"descricao\"\n            class=\"form-control\"\n            formControlName=\"descricao\"\n            [(ngModel)]=\"cargo.descricao\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('descricao', '') }\"\n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('descricao', 'required')\" msgErro=\"A Descrição é obrigatória.\"></app-input-control-error>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"criar()\">\n        Salvar\n      </button>\n    </form>\n  </div>\n</section>\n","import { Component, OnInit, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { CargoService } from './../cargo.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n@Component({\n  selector: 'app-cargos-listagem',\n  templateUrl: './cargos-listagem.component.html',\n  styleUrls: ['./cargos-listagem.component.css']\n})\nexport class CargosListagemComponent implements OnInit {\n  cargos: Array<any>;\n  cargoExcluir: any;\n  modalRef: BsModalRef;\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output() onEditClick = new EventEmitter<any>();\n\n\n  constructor(\n    private cargoService: CargoService,\n    private modalService: BsModalService\n    ) {}\n\n  ngOnInit() {\n    this.listar();\n  }\n\n  listar(){\n    this.cargoService.listar().subscribe(dados => this.cargos = dados);\n  }\n\n  alterar(cargo: any){\n    this.onEditClick.emit(cargo);\n  }\n\n  openModal(template: TemplateRef<any>, cargo: any){\n      this.modalRef = this.modalService.show(template);\n      this.cargoExcluir = cargo;\n  }\n\n  excluirRegistro(cargo: any){\n    this.cargoService.excluir(cargo).subscribe((resposta) => {\n      location.reload();\n    });\n  }\n\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Listagem de cargos</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Descrição</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let car of cargos\">\n          <th scope=\"row\">{{ car.id }}</th>\n          <td>\n            {{ car.descricao | uppercase }}\n          </td>\n          <td>\n            <button\n              class=\"btn btn-primary\"\n              (click)=\"alterar(car)\"\n              style=\"margin-right: 10px;\"\n            >\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-danger\" (click)=\"openModal(template, car)\"><i class=\"fas fa-trash\"></i></button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ng-template #template>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Excluir item</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Confirma a exclusão do registro?</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-dark\" (click)=\"modalRef.hide()\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"excluirRegistro(cargoExcluir)\">Excluir</button>\n      </div>\n  </ng-template>\n  </div>\n</section>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CargosFormularioComponent } from './cargos-formulario/cargos-formulario.component';\n\n@Component({\n  selector: 'app-cargos',\n  templateUrl: './cargos.component.html'\n})\nexport class CargosComponent implements OnInit {\n  @ViewChild(CargosFormularioComponent)  cargoForm: CargosFormularioComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  editClick(cargo: { [x: string]: any; }) {\n    this.cargoForm.carregarCargo(cargo);\n  }\n}\n","<app-cargos-formulario></app-cargos-formulario>\n<app-cargos-listagem (onEditClick)=\"editClick($event)\"></app-cargos-listagem>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  empresasUrl = 'http://localhost:5000/api/empresas';\n\n  constructor(private http: HttpClient) {}\n\n  listar() {\n    return this.http.get<any[]>(this.empresasUrl);\n  }\n\n  salvar(empresa: any){\n    return this.http.post(this.empresasUrl, empresa);\n  }\n\n  excluir(empresa: any){\n    return this.http.delete(this.empresasUrl + '/' + empresa.id);\n  }\n}\n","import { EmpresaService } from '../empresa.service';\nimport { Validacoes } from '../../validacoes';\nimport { Component, OnInit } from '@angular/core';\nimport {  FormGroup,  Validators,  FormBuilder} from '@angular/forms';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-empresas-formulario',\n  templateUrl: './empresas-formulario.component.html',\n  styleUrls: ['./empresas-formulario.component.css'],\n})\nexport class EmpresasFormularioComponent implements OnInit {\n  constructor(\n    private empresaService: EmpresaService,\n    private fb: FormBuilder\n  ) {}\n\n  empresa: any;\n  registerForm: FormGroup;\n\n  ngOnInit() {\n    this.empresa = {};\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      nome: ['', [Validators.required]],\n      cnpj: ['', [Validators.required, Validacoes.ValidarCnpj]],\n      dataFundacao: [],\n    });\n  }\n\n  criar() {\n    if (this.registerForm.valid) {\n      this.empresa.dataFundacao = AppComponent.dateToString(this.empresa.dataFundacao);\n\n      this.empresaService.salvar(this.empresa).subscribe((resposta) => {\n        location.reload();\n      });\n    } else {\n        AppComponent.formIsValid(this.registerForm);\n    }\n  }\n\n  carregarEmpresa({ ...obj }) {\n    obj.dataFundacao = AppComponent.toDate(obj.dataFundacao);\n    this.empresa = obj;\n  }\n\n  verificaValidTouched(campo: string, validacao: string) {\n    return AppComponent.validAndTouched(this.registerForm, campo, validacao);\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Cadastro de empresas</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form [formGroup]=\"registerForm\" method=\"post\" >\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"nome\">Nome</label>\n          <input \n             type=\"text\"\n            id=\"nome\"\n            class=\"form-control\"\n            formControlName=\"nome\"\n            [(ngModel)]=\"empresa.nome\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('nome', '') }\"\n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('nome', 'required')\" msgErro=\"O Nome é obrigatório.\"></app-input-control-error>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"cnpj\">CNPJ</label>\n          <input\n            type=\"text\"\n            id=\"cnpj\"\n            class=\"form-control\"\n            mask=\"00.000.000/0000-00\"\n            [(ngModel)]=\"empresa.cnpj\"\n            formControlName=\"cnpj\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('cnpj', '') }\"           \n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cnpj', 'required')\" msgErro=\"CNPJ está obrigatório.\"></app-input-control-error>\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cnpj', 'mask')\" msgErro=\"CNPJ está inválido.\"></app-input-control-error>\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cnpj', 'cnpjInvalido')\" msgErro=\"CNPJ está inválido.\"></app-input-control-error>\n        </div>\n\n        <div class=\"form-group col-md-2\">\n          <label for=\"dataFundacao\">Data Fundação</label>\n          <div class=\"input-group\">\n            <input\n              id=\"dataFundacao\"\n              class=\"form-control\"\n              formControlName=\"dataFundacao\"\n              placeholder=\"dd/mm/yyyy\"\n              [(ngModel)]=\"empresa.dataFundacao\"\n              ngbDatepicker\n              #d=\"ngbDatepicker\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                class=\"btn btn-outline-secondary\"\n                (click)=\"d.toggle()\"\n                type=\"button\"\n              >\n                <i class=\"fas fa-calendar-alt\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"criar()\">\n        Salvar\n      </button>\n    </form>\n  </div>\n</section>\n","import { Component, OnInit, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { EmpresaService } from '../empresa.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-empresas-listagem',\n  templateUrl: './empresas-listagem.component.html',\n  styleUrls: ['./empresas-listagem.component.css'],\n})\nexport class EmpresasListagemComponent implements OnInit {\n  empresas: Array<any>;\n  empresaExcluir: any;\n  modalRef: BsModalRef;\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output() onEditClick = new EventEmitter<any>();\n\n\n  constructor(\n    private empresaService: EmpresaService,\n    private modalService: BsModalService\n    ) {}\n\n  ngOnInit() {\n    this.listar();\n  }\n\n  listar(){\n    this.empresaService.listar().subscribe(dados => this.empresas = dados);\n  }\n\n  alterar(empresa: any){\n    this.onEditClick.emit(empresa);\n  }\n\n  openModal(template: TemplateRef<any>, empresa: any){\n      this.modalRef = this.modalService.show(template);\n      this.empresaExcluir = empresa;\n  }\n\n  excluirRegistro(empresa: any){\n    this.empresaService.excluir(empresa).subscribe((resposta) => {\n      location.reload();\n    });\n  }\n\n\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Listagem de empresas</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Nome</th>\n          <th scope=\"col\">CNPJ</th>\n          <th scope=\"col\">Data Fundação</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let emp of empresas\">\n          <th scope=\"row\">{{ emp.id }}</th>\n          <td>\n            {{ emp.nome }}\n          </td>\n          <td>{{ emp.cnpj | mask: \"00.000.000/0000-00\" }}</td>\n          <td>{{ emp.dataFundacao }}</td>\n          <td>\n            <button\n              class=\"btn btn-primary\"\n              (click)=\"alterar(emp)\"\n              style=\"margin-right: 10px;\"\n            >\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-danger\" (click)=\"openModal(template, emp)\"><i class=\"fas fa-trash\"></i></button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ng-template #template>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Excluir item</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Confirma a exclusão do registro?</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-dark\" (click)=\"modalRef.hide()\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"excluirRegistro(empresaExcluir)\">Excluir</button>\n      </div>\n  </ng-template>\n  </div>\n</section>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { EmpresasFormularioComponent } from './empresas-formulario/empresas-formulario.component';\r\n\r\n@Component({\r\n  selector: 'app-empresas',\r\n  templateUrl: './empresas.component.html',\r\n})\r\nexport class EmpresasComponent implements OnInit {\r\n  @ViewChild(EmpresasFormularioComponent)  empresaForm: EmpresasFormularioComponent;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {  }\r\n\r\n  editClick(empresa: { [x: string]: any; }) {\r\n    this.empresaForm.carregarEmpresa(empresa);\r\n  }\r\n}\r\n","<app-empresas-formulario></app-empresas-formulario>\n<app-empresas-listagem (onEditClick)=\"editClick($event)\"></app-empresas-listagem>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Funcionario } from '../_models/Funcionario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FuncionarioService {\n\nfuncionariosUrl = 'http://localhost:5000/api/funcionarios';\n\n  constructor(private http: HttpClient) {}\n\n  listar(): Observable<Funcionario[]>{\n    return this.http.get<Funcionario[]>(this.funcionariosUrl);\n  }\n\n  salvar(funcionario: any) {\n    return this.http.post(this.funcionariosUrl, funcionario);\n  }\n\n  excluir(funcionario: Funcionario){\n    return this.http.delete(this.funcionariosUrl + '/' + funcionario);\n  }\n\n  buscarPorId(id: number): Observable<Funcionario> {\n    return this.http.get<Funcionario>(`${this.funcionariosUrl}/${id}`);\n  }\n\n  vincularEmpresa(funcionario: Funcionario): Observable<Funcionario> {\n    return this.http.put<Funcionario>(\n      `${this.funcionariosUrl}/${funcionario.id}/vincularempresa/${funcionario.empresaId}`,\n      funcionario\n    );\n  }\n\n}\n","import { CargoService } from './../../cargos/cargo.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FuncionarioService } from '../funcionario.service';\nimport { Subscription } from 'rxjs';\nimport { Funcionario } from 'src/app/_models/Funcionario';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-funcionarios-cargo',\n  templateUrl: './funcionarios-cargo.component.html',\n  styleUrls: ['./funcionarios-cargo.component.css']\n})\nexport class FuncionariosCargoComponent implements OnInit {\n\n  routeSub: Subscription;\n  cargos: Array<any>;\n  funcionario: Funcionario;\n\n  constructor(\n      private cargoService: CargoService,\n      private funcionarioService: FuncionarioService,\n      private route: ActivatedRoute\n    ) { }\n\n  ngOnInit() {\n    this.funcionario = {} as Funcionario;\n    this.routeSub = this.route.params.subscribe(params => {\n      this.loadFuncionario(params.id);\n    });\n\n    this.cargoService.listar().subscribe(dados => {\n      this.cargos = dados;\n    });\n  }\n\n  vincular(){\n    this.funcionarioService.vincularEmpresa(this.funcionario).subscribe(result => {\n      location.href = '/funcionarios';\n    });\n  }\n\n  loadFuncionario(funcionarioId: number){\n    this.funcionarioService.buscarPorId(funcionarioId).subscribe(result => {\n      this.funcionario = result;\n    });\n  }\n\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Vincular funcionário a um cargo</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form method=\"post\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label>Nome</label>\n          <input\n            type=\"text\"\n            name=\"nome\"\n            class=\"form-control\"\n            disabled\n            ngModel\n          />\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"cargoId\">Cargo</label>\n\n          <select class=\"form-control\" \n                  name=\"cargoId\"\n                  ngModel>\n            <option value=\"\">--Sem Cargo--</option>\n            <option *ngFor=\"let car of cargos\" value=\"{{ car.id }}\">\n              {{ car.nome }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"vincular()\">\n        Salvar\n      </button>\n    </form>\n  </div>\n</section>\n","import { FuncionarioService } from './../funcionario.service';\nimport { EmpresaService } from './../../empresas/empresa.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { Funcionario } from 'src/app/_models/Funcionario';\n\n@Component({\n  selector: 'app-funcionarios-empresa',\n  templateUrl: './funcionarios-empresa.component.html',\n  styleUrls: ['./funcionarios-empresa.component.css']\n})\nexport class FuncionariosEmpresaComponent implements OnInit {\n\n  routeSub: Subscription;\n  empresas: Array<any>;\n  funcionario: Funcionario;\n\n  constructor(\n      private empresaService: EmpresaService,\n      private funcionarioService: FuncionarioService,\n      private route: ActivatedRoute\n    ) { }\n\n  ngOnInit() {\n    this.funcionario = {} as Funcionario;\n    this.routeSub = this.route.params.subscribe(params => {\n      this.loadFuncionario(params.id);\n    });\n\n    this.empresaService.listar().subscribe(dados => {\n      this.empresas = dados;\n    });\n  }\n\n  vincular(){\n    this.funcionarioService.vincularEmpresa(this.funcionario).subscribe(result => {\n      location.href = '/funcionarios';\n    });\n  }\n\n  loadFuncionario(funcionarioId: number){\n    this.funcionarioService.buscarPorId(funcionarioId).subscribe(result => {\n      this.funcionario = result;\n    });\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Vincular funcionário a uma empresa</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form method=\"post\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label>Nome</label>\n          <input\n            type=\"text\"\n            name=\"nome\"\n            [(ngModel)]=\"funcionario.nome\"\n            class=\"form-control\"\n            disabled\n            ngModel\n          />\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"empresaId\">Empresa</label>\n\n          <select class=\"form-control\" \n                  name=\"empresaId\"\n                  [(ngModel)]=\"funcionario.empresaId\"  \n                  ngModel>\n            <option value=\"\">--Sem Empresa--</option>\n            <option *ngFor=\"let emp of empresas\" value=\"{{ emp.id }}\">\n              {{ emp.nome }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"vincular()\">\n        Salvar\n      </button>\n    </form>\n  </div>\n</section>\n","import { FuncionarioService } from '../funcionario.service';\nimport { Validacoes } from '../../validacoes';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-funcionarios-formulario',\n  templateUrl: './funcionarios-formulario.component.html',\n  styleUrls: ['./funcionarios-formulario.component.css'],\n})\nexport class FuncionariosFormularioComponent implements OnInit {\n  constructor(\n    private funcionarioService: FuncionarioService,\n    private fb: FormBuilder\n  ) {}\n\n  funcionario: any;\n  registerForm: FormGroup;\n\n  ngOnInit() {\n    this.funcionario = {};\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      nome: ['', [Validators.required]],\n      cpf: ['', [Validators.required, Validacoes.ValidaCpf]],\n      dataContratacao: [],\n    });\n  }\n\n  criar() {\n    if (this.registerForm.valid) {\n      if (this.funcionario.dataContratacao !== undefined) {\n        this.funcionario.dataContratacao = AppComponent.dateToString(\n          this.funcionario.dataContratacao\n        );\n      }\n\n      this.funcionarioService.salvar(this.funcionario).subscribe((resposta) => {\n        location.reload();\n      });\n    } else {\n      AppComponent.formIsValid(this.registerForm);\n    }\n  }\n\n  carregarFuncionario({ ...obj }) {\n    obj.dataContratacao = AppComponent.toDate(obj.dataContratacao);\n    this.funcionario = obj;\n  }\n\n  verificaValidTouched(campo: string, validacao: string) {\n    return AppComponent.validAndTouched(this.registerForm, campo, validacao);\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Cadastro de funcionarios</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form [formGroup]=\"registerForm\" method=\"post\" >\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"nome\">Nome</label>\n          <input \n             type=\"text\"\n            id=\"nome\"\n            class=\"form-control\"\n            formControlName=\"nome\"\n            [(ngModel)]=\"funcionario.nome\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('nome', '') }\"\n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('nome', 'required')\" msgErro=\"O Nome é obrigatório.\"></app-input-control-error>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"cpf\">CPF</label>\n          <input\n            type=\"text\"\n            id=\"cpf\"\n            class=\"form-control\"\n            mask=\"000.000.000-00\"\n            [(ngModel)]=\"funcionario.cpf\"\n            formControlName=\"cpf\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('cpf', '') }\"           \n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cpf', 'required')\" msgErro=\"CPF está obrigatório.\"></app-input-control-error>\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cpf', 'cpfInvalido')\" msgErro=\"CPF está inválido.\"></app-input-control-error>\n        </div>\n\n        <div class=\"form-group col-md-2\">\n          <label for=\"dataContratacao\">Data Contratação</label>\n          <div class=\"input-group\">\n            <input\n              id=\"dataContratacao\"\n              class=\"form-control\"\n              formControlName=\"dataContratacao\"\n              placeholder=\"dd/mm/yyyy\"\n              [(ngModel)]=\"funcionario.dataContratacao\"\n              ngbDatepicker\n              #d=\"ngbDatepicker\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                class=\"btn btn-outline-secondary\"\n                (click)=\"d.toggle()\"\n                type=\"button\"\n              >\n                <i class=\"fas fa-calendar-alt\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"criar()\">\n        Salvar\n      </button>\n    </form>\n  </div>\n</section>\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  TemplateRef,\n} from '@angular/core';\nimport { FuncionarioService } from './../funcionario.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Funcionario } from 'src/app/_models/Funcionario';\n@Component({\n  selector: 'app-funcionarios-listagem',\n  templateUrl: './funcionarios-listagem.component.html',\n  styleUrls: ['./funcionarios-listagem.component.css'],\n})\nexport class FuncionariosListagemComponent implements OnInit {\n  funcionarios: Array<any>;\n  funcionarioExcluir: any;\n  modalRef: BsModalRef;\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output() onEditClick = new EventEmitter<any>();\n\n  constructor(\n    private funcionarioService: FuncionarioService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.listar();\n  }\n\n  listar() {\n    this.funcionarioService\n      .listar()\n      .subscribe((dados) => (this.funcionarios = dados));\n  }\n\n  alterar(funcionario: Funcionario) {\n    this.onEditClick.emit(funcionario);\n  }\n\n  openModal(template: TemplateRef<any>, funcionario: any) {\n    this.modalRef = this.modalService.show(template);\n    this.funcionarioExcluir = funcionario;\n  }\n\n  excluirRegistro(funcionario: Funcionario) {\n    this.funcionarioService.excluir(funcionario).subscribe((resposta) => {\n      location.reload();\n    });\n  }\n\n  abrirEmpresa(funcionario: Funcionario) {\n    location.href = `/funcionarios/${funcionario.id}/empresa`;\n  }\n\n  abrirCargo(funcionario: Funcionario) {\n    location.href = `/funcionarios/${funcionario.id}/cargo`;\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Listagem de funcionarios</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Nome</th>\n          <th scope=\"col\">CPF</th>\n          <th scope=\"col\">Empresa</th>\n          <th scope=\"col\">Cargo</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let fun of funcionarios\">\n          <th scope=\"row\">{{ fun.id }}</th>\n          <td>\n            {{ fun.nome }}\n          </td>\n          <td>{{ fun.cpf | mask: \"000.000.000-00\" }}</td>\n          <td>{{ fun.empresa }}</td>\n          <td>{{ fun.cargo }}</td>\n          <td>\n            <button class=\"btn btn-primary\" (click)=\"alterar(fun)\" style=\"margin-right: 10px;\"><i class=\"fas fa-edit\"></i></button>\n            <button class=\"btn btn-danger\"  (click)=\"openModal(template, fun)\" style=\"margin-right: 10px;\"><i class=\"fas fa-trash\"></i></button>\n            <button class=\"btn btn-primary\" (click)=\"abrirEmpresa(fun)\" style=\"margin-right: 10px;\">Empresa</button>\n            <button class=\"btn btn-primary\" (click)=\"abrirCargo(fun)\" [disabled]=\"fun.empresa == null\">Cargo</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ng-template #template>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Excluir item</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Confirma a exclusão do registro?</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-dark\" (click)=\"modalRef.hide()\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"excluirRegistro(funcionarioExcluir)\">Excluir</button>\n      </div>\n  </ng-template>\n  </div>\n</section>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FuncionariosFormularioComponent } from './funcionarios-formulario/funcionarios-formulario.component';\n\n@Component({\n  selector: 'app-funcionarios',\n  templateUrl: './funcionarios.component.html'\n})\nexport class FuncionariosComponent implements OnInit {\n  @ViewChild(FuncionariosFormularioComponent)  funcionarioForm: FuncionariosFormularioComponent;\n\n  constructor() {}\n\n  ngOnInit() {  }\n\n  editClick(funcionario: { [x: string]: any; }) {\n    this.funcionarioForm.carregarFuncionario(funcionario);\n  }\n\n}\n","<app-funcionarios-formulario></app-funcionarios-formulario>\r\n<app-funcionarios-listagem (onEditClick)=\"editClick($event)\"></app-funcionarios-listagem>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-input-control-error',\n  templateUrl: './input-control-error.component.html'\n})\nexport class InputControlErrorComponent implements OnInit {\n\n  @Input() mostrarErro: boolean;\n  @Input() msgErro: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","<div *ngIf=\"mostrarErro\" class=\"invalid-feedback\" style=\"display: block;\"> {{msgErro}}</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  title = 'EmpresasApp-DB1';\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">{{ title }}</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarNavAltMarkup\"\n    aria-controls=\"navbarNavAltMarkup\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <div class=\"navbar-nav\">\n      <a class=\"nav-item nav-link\" href=\"empresas\">Empresas </a>\n      <a class=\"nav-item nav-link\" href=\"funcionarios\">Funcionários</a>\n      <a class=\"nav-item nav-link\" href=\"cargos\">Cargos</a>\n    </div>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nfunction padNumber(value: number) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    } else {\n        return '';\n    }\n}\n\nfunction isNumber(value: any): boolean {\n    return !isNaN(toInteger(value));\n}\n\nfunction toInteger(value: any): number {\n    return parseInt(`${value}`, 10);\n}\n\n\n@Injectable()\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\n    parse(value: string): NgbDateStruct {\n        if (value) {\n            const dateParts = value.trim().split('/');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return {year: toInteger(dateParts[0]), month: null, day: null};\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\n            }\n        }\n        return null;\n    }\n\n    format(date: NgbDateStruct): string {\n        let stringDate = '';\n        if (date) {\n            stringDate += isNumber(date.day) ? padNumber(date.day) + '/' : '';\n            stringDate += isNumber(date.month) ? padNumber(date.month) + '/' : '';\n            stringDate += date.year;\n        }\n        return stringDate;\n    }\n}\n","import { AbstractControl } from '../../node_modules/@angular/forms';\r\nimport { toInteger } from '@ng-bootstrap/ng-bootstrap/util/util';\r\n\r\nexport class Validacoes {\r\n  static ValidarCnpj(controle: AbstractControl) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let cnpjInvalido = { cnpjInvalido: true };\r\n    let cnpj = controle.value;\r\n\r\n    if (cnpj === undefined) {\r\n      return null;\r\n    }\r\n\r\n    cnpj = cnpj.replace(/[^\\d]+/g, '');\r\n\r\n    if (cnpj === '') {\r\n      return null;\r\n    }\r\n\r\n    if (cnpj.length !== 14) {\r\n      return null;\r\n    }\r\n\r\n    // Elimina CNPJs invalidos conhecidos\r\n    if (\r\n      cnpj === '00000000000000' ||\r\n      cnpj === '11111111111111' ||\r\n      cnpj === '22222222222222' ||\r\n      cnpj === '33333333333333' ||\r\n      cnpj === '44444444444444' ||\r\n      cnpj === '55555555555555' ||\r\n      cnpj === '66666666666666' ||\r\n      cnpj === '77777777777777' ||\r\n      cnpj === '88888888888888' ||\r\n      cnpj === '99999999999999'\r\n    ) {\r\n      return cnpjInvalido;\r\n    }\r\n\r\n    // Valida DVs\r\n    let tamanho = cnpj.length - 2;\r\n    let numeros = cnpj.substring(0, tamanho);\r\n    const digitos = cnpj.substring(tamanho);\r\n    let soma = 0;\r\n    let pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2) {\r\n        pos = 9;\r\n      }\r\n    }\r\n    let resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);\r\n    if (resultado !== Number(digitos.charAt(0))) {\r\n      return cnpjInvalido;\r\n    }\r\n    tamanho = tamanho + 1;\r\n    numeros = cnpj.substring(0, tamanho);\r\n    soma = 0;\r\n    pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2) {\r\n        pos = 9;\r\n      }\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);\r\n    if (resultado !== Number(digitos.charAt(1))) {\r\n      return cnpjInvalido;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static ValidaCpf(controle: AbstractControl) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let cpfInvalido = { cpfInvalido: true };\r\n    const cpf = controle.value;\r\n\r\n    let soma = 0;\r\n    let resto: number;\r\n\r\n    const regex = new RegExp('[0-9]{11}');\r\n\r\n    if (cpf === '' || cpf === undefined) {\r\n      return null;\r\n    }\r\n\r\n    if (\r\n      cpf === '00000000000' ||\r\n      cpf === '11111111111' ||\r\n      cpf === '22222222222' ||\r\n      cpf === '33333333333' ||\r\n      cpf === '44444444444' ||\r\n      cpf === '55555555555' ||\r\n      cpf === '66666666666' ||\r\n      cpf === '77777777777' ||\r\n      cpf === '88888888888' ||\r\n      cpf === '99999999999' ||\r\n      !regex.test(cpf)\r\n    ) {\r\n      return cpfInvalido;\r\n    }\r\n\r\n    for (let i = 1; i <= 9; i++) {\r\n      soma = soma + Number(cpf.substring(i - 1, i)) * (11 - i);\r\n    }\r\n    resto = (soma * 10) % 11;\r\n\r\n    if (resto === 10 || resto === 11) {\r\n      resto = 0;\r\n    }\r\n    if (resto !== Number(cpf.substring(9, 10))) {\r\n      return cpfInvalido;\r\n    }\r\n\r\n    soma = 0;\r\n    for (let i = 1; i <= 10; i++) {\r\n      soma = soma + Number(cpf.substring(i - 1, i)) * (12 - i);\r\n    }\r\n    resto = (soma * 10) % 11;\r\n\r\n    if (resto === 10 || resto === 11) {\r\n      resto = 0;\r\n    }\r\n    if (resto !== Number(cpf.substring(10, 11))) {\r\n      return cpfInvalido;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}