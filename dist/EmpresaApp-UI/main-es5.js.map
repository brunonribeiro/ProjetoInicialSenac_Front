{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/empresas/empresa.service.ts","webpack:///src/app/empresas/empresas-formulario/empresas-formulario.component.ts","webpack:///src/app/empresas/empresas-formulario/empresas-formulario.component.html","webpack:///src/app/empresas/empresas-listagem/empresas-listagem.component.ts","webpack:///src/app/empresas/empresas-listagem/empresas-listagem.component.html","webpack:///src/app/empresas/empresas.component.ts","webpack:///src/app/empresas/empresas.component.html","webpack:///src/app/input-control-error/input-control-error.component.ts","webpack:///src/app/input-control-error/input-control-error.component.html","webpack:///src/app/ngb-date-fr-parser-formatter.ts","webpack:///src/app/validacoes.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","provide","useClass","selector","templateUrl","styleUrls","providers","AppModule","declarations","bootstrap","EmpresaService","http","empresasUrl","get","empresa","post","console","log","providedIn","EmpresasFormularioComponent","empresaService","fb","dateToString","date","day","month","year","validation","registerForm","group","nome","required","cnpj","ValidarCnpj","dataFundacao","valid","criar","subscribe","resposta","location","reload","verificaValidacoesForm","obj","toDate","myStringDate","dateParts","split","result","Number","campo","validacao","hasError","errors","touched","form","Object","controls","forEach","field","controle","markAsTouched","modalRef","EmpresasListagemComponent","modalService","onEditClick","listar","dados","empresas","emit","template","show","empresaExcluir","excluir","EmpresasComponent","empresaCadastro","carregarEmpresa","editClick","InputControlErrorComponent","padNumber","value","isNumber","slice","isNaN","toInteger","parseInt","NgbDateFRParserFormatter","trim","length","stringDate","Validacoes","cnpjInvalido","undefined","replace","tamanho","numeros","substring","digitos","soma","pos","i","charAt","resultado","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { EmpresasComponent } from './empresas/empresas.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path: 'empresas', component: EmpresasComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateFRParserFormatter } from './ngb-date-fr-parser-formatter';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [\n    { provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter },\n  ],\n})\nexport class AppComponent {\n  title = 'EmpresasApp-DB1';\n}\n","<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n  <span style=\"margin-left: 20px;\">{{title}}</span>\n</div>\n\n\n<div class=\"content\" role=\"main\">\n  <router-outlet></router-outlet>\n</div>\n  \n\n","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { EmpresaService} from './empresas/empresa.service';\nimport { EmpresasComponent } from './empresas/empresas.component';\nimport { EmpresasListagemComponent } from './empresas/empresas-listagem/empresas-listagem.component';\nimport { EmpresasFormularioComponent } from './empresas/empresas-formulario/empresas-formulario.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { InputControlErrorComponent } from './input-control-error/input-control-error.component';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      EmpresasListagemComponent,\n      EmpresasComponent,\n      EmpresasFormularioComponent,\n      InputControlErrorComponent,\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      AppRoutingModule,\n      FormsModule,\n      NgbModule,\n      ReactiveFormsModule,\n      ModalModule.forRoot(),\n      NgxMaskModule.forRoot()\n   ],\n   providers: [\n      EmpresaService\n   ],\n   bootstrap: [\n      AppComponent,\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  empresasUrl = 'http://localhost:5000/api/empresas';\n\n  constructor(private http: HttpClient) {}\n\n  listar() {\n    return this.http.get<any[]>(this.empresasUrl);\n  }\n\n  criar(empresa: any){\n    return this.http.post(this.empresasUrl, empresa);\n  }\n\n  excluir(empresa: any){\n    console.log(empresa);\n    return this.http.delete(this.empresasUrl + '/' + empresa.id);\n  }\n}\n","import { EmpresaService } from '../empresa.service';\nimport { Validacoes } from '../../validacoes';\nimport { Component, OnInit, Input } from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  FormBuilder,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-empresas-formulario',\n  templateUrl: './empresas-formulario.component.html',\n  styleUrls: ['./empresas-formulario.component.css'],\n})\nexport class EmpresasFormularioComponent implements OnInit {\n  constructor(\n    private empresaService: EmpresaService,\n    private fb: FormBuilder\n  ) {}\n\n  empresa: any;\n  registerForm: FormGroup;\n  dateToString = (date) => `${date.day}/${date.month}/${date.year}`;\n\n  ngOnInit() {\n    this.empresa = {};\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      nome: ['', [Validators.required]],\n      cnpj: ['', [Validators.required, Validacoes.ValidarCnpj]],\n      dataFundacao: [],\n    });\n  }\n\n  criar() {\n    if (this.registerForm.valid) {\n      this.empresa.dataFundacao = this.dateToString(this.empresa.dataFundacao);\n\n      this.empresaService.criar(this.empresa).subscribe((resposta) => {\n        location.reload();\n      });\n    } else {\n       this.verificaValidacoesForm(this.registerForm);\n    }\n  }\n\n  carregarEmpresa({ ...obj }) {\n    obj.dataFundacao = this.toDate(obj.dataFundacao);\n    this.empresa = obj;\n  }\n\n  toDate(myStringDate: string) {\n    const dateParts = myStringDate.split('/');\n    const result = {\n      day: Number(dateParts[0]),\n      month: Number(dateParts[1]),\n      year: Number(dateParts[2]),\n    };\n    return result;\n  }\n\n  verificaValidTouched(campo: string, validacao: string) {\n    let valid = false;\n\n    if (validacao !== '') {\n      valid = this.registerForm.get(campo).hasError(validacao);\n    } else {\n      valid = this.registerForm.get(campo).errors != null;\n    }\n\n    return valid && this.registerForm.get(campo).touched;\n  }\n\n  verificaValidacoesForm(form: FormGroup) {\n    Object.keys(form.controls).forEach((field) => {\n      const controle = form.controls[field];\n      controle.markAsTouched();\n    });\n  }\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Cadastro de empresas</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <form [formGroup]=\"registerForm\" method=\"post\" >\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"nome\">Nome</label>\n          <input \n             type=\"text\"\n            id=\"nome\"\n            class=\"form-control\"\n            formControlName=\"nome\"\n            [(ngModel)]=\"empresa.nome\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('nome', '') }\"\n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('nome', 'required')\" msgErro=\"O Nome é obrigatório.\"></app-input-control-error>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"cnpj\">CNPJ</label>\n          <input\n            type=\"text\"\n            id=\"cnpj\"\n            class=\"form-control\"\n            mask=\"00.000.000/0000-00\"\n            [(ngModel)]=\"empresa.cnpj\"\n            formControlName=\"cnpj\"\n            [ngClass]=\"{ 'is-invalid': verificaValidTouched('cnpj', '') }\"           \n          />\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cnpj', 'required')\" msgErro=\"CNPJ está obrigatório.\"></app-input-control-error>\n          <app-input-control-error [mostrarErro]=\"verificaValidTouched('cnpj', 'cnpjInvalido')\" msgErro=\"CNPJ está inválido.\"></app-input-control-error>\n        </div>\n\n        <div class=\"form-group col-md-2\">\n          <label for=\"dataFundacao\">Data Fundação</label>\n          <div class=\"input-group\">\n            <input\n              id=\"dataFundacao\"\n              class=\"form-control\"\n              formControlName=\"dataFundacao\"\n              placeholder=\"dd/mm/yyyy\"\n              [(ngModel)]=\"empresa.dataFundacao\"\n              ngbDatepicker\n              #d=\"ngbDatepicker\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                class=\"btn btn-outline-secondary\"\n                (click)=\"d.toggle()\"\n                type=\"button\"\n              >\n                <i class=\"fas fa-calendar-alt\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"criar()\">\n        Salvar\n      </button>\n    </form>\n  </div>\n</section>\n","import { Component, OnInit, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { EmpresaService } from '../empresa.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-empresas-listagem',\n  templateUrl: './empresas-listagem.component.html',\n  styleUrls: ['./empresas-listagem.component.css'],\n})\nexport class EmpresasListagemComponent implements OnInit {\n  empresas: Array<any>;\n  empresaExcluir: any;\n  modalRef: BsModalRef;\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output() onEditClick = new EventEmitter<any>();\n\n\n  constructor(\n    private empresaService: EmpresaService,\n    private modalService: BsModalService\n    ) {}\n\n  ngOnInit() {\n    this.listar();\n  }\n\n  listar(){\n    this.empresaService.listar().subscribe(dados => this.empresas = dados);\n  }\n\n  alterar(empresa: any){\n    this.onEditClick.emit(empresa);\n  }\n\n  openModal(template: TemplateRef<any>, empresa: any){\n      this.modalRef = this.modalService.show(template);\n      this.empresaExcluir = empresa;\n  }\n\n  excluirRegistro(empresa: any){\n    this.empresaService.excluir(empresa).subscribe((resposta) => {\n      location.reload();\n    });\n  }\n\n\n}\n","<section class=\"my-4\">\n  <div class=\"container\">\n    <h2>Listagem de empresas</h2>\n  </div>\n</section>\n<section>\n  <div class=\"container\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Nome</th>\n          <th scope=\"col\">CNPJ</th>\n          <th scope=\"col\">Data Fundação</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let emp of empresas\">\n          <th scope=\"row\">{{ emp.id }}</th>\n          <td>\n            {{ emp.nome }}\n          </td>\n          <td>{{ emp.cnpj | mask: \"00.000.000/0000-00\" }}</td>\n          <td>{{ emp.dataFundacao }}</td>\n          <td>\n            <button\n              class=\"btn btn-primary\"\n              (click)=\"alterar(emp)\"\n              style=\"margin-right: 10px;\"\n            >\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-danger\" (click)=\"openModal(template, emp)\"><i class=\"fas fa-trash\"></i></button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ng-template #template>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Excluir item</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Confirma a exclusão do registro?</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-dark\" (click)=\"modalRef.hide()\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"excluirRegistro(empresaExcluir)\">Excluir</button>\n      </div>\n  </ng-template>\n  </div>\n</section>\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { EmpresasFormularioComponent } from './empresas-formulario/empresas-formulario.component';\r\n\r\n@Component({\r\n  selector: 'app-empresas',\r\n  templateUrl: './empresas.component.html',\r\n})\r\nexport class EmpresasComponent implements OnInit {\r\n  empresa: any;\r\n  @ViewChild(EmpresasFormularioComponent)\r\n  empresaCadastro: EmpresasFormularioComponent;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {  }\r\n\r\n  editClick(empresa: { [x: string]: any; }) {\r\n    this.empresaCadastro.carregarEmpresa(empresa);\r\n  }\r\n}\r\n","<app-empresas-formulario></app-empresas-formulario>\n<app-empresas-listagem (onEditClick)=\"editClick($event)\"></app-empresas-listagem>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-input-control-error',\n  templateUrl: './input-control-error.component.html'\n})\nexport class InputControlErrorComponent implements OnInit {\n\n  @Input() mostrarErro: boolean;\n  @Input() msgErro: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","<div *ngIf=\"mostrarErro\" class=\"invalid-feedback\" style=\"display: block;\"> {{msgErro}}</div>\n","import { Injectable } from '@angular/core';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nfunction padNumber(value: number) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    } else {\n        return '';\n    }\n}\n\nfunction isNumber(value: any): boolean {\n    return !isNaN(toInteger(value));\n}\n\nfunction toInteger(value: any): number {\n    return parseInt(`${value}`, 10);\n}\n\n\n@Injectable()\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\n    parse(value: string): NgbDateStruct {\n        if (value) {\n            const dateParts = value.trim().split('/');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return {year: toInteger(dateParts[0]), month: null, day: null};\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\n            }\n        }\n        return null;\n    }\n\n    format(date: NgbDateStruct): string {\n        let stringDate = '';\n        if (date) {\n            stringDate += isNumber(date.day) ? padNumber(date.day) + '/' : '';\n            stringDate += isNumber(date.month) ? padNumber(date.month) + '/' : '';\n            stringDate += date.year;\n        }\n        return stringDate;\n    }\n}\n","import { AbstractControl } from '../../node_modules/@angular/forms';\r\nimport { toInteger } from '@ng-bootstrap/ng-bootstrap/util/util';\r\n\r\nexport class Validacoes {\r\n  static ValidarCnpj(controle: AbstractControl) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let cnpjInvalido = { cnpjInvalido: true};\r\n    let cnpj = controle.value;\r\n\r\n    if (cnpj === undefined) {\r\n        return null;\r\n    }\r\n\r\n    cnpj = cnpj.replace(/[^\\d]+/g, '');\r\n\r\n    if (cnpj === '') {\r\n        return null;\r\n    }\r\n\r\n    if (cnpj.length !== 14) {\r\n        return null;\r\n    }\r\n\r\n    // Elimina CNPJs invalidos conhecidos\r\n    if (\r\n      cnpj === '00000000000000' ||\r\n      cnpj === '11111111111111' ||\r\n      cnpj === '22222222222222' ||\r\n      cnpj === '33333333333333' ||\r\n      cnpj === '44444444444444' ||\r\n      cnpj === '55555555555555' ||\r\n      cnpj === '66666666666666' ||\r\n      cnpj === '77777777777777' ||\r\n      cnpj === '88888888888888' ||\r\n      cnpj === '99999999999999'\r\n    ) {\r\n        return cnpjInvalido;\r\n    }\r\n\r\n    // Valida DVs\r\n    let tamanho = cnpj.length - 2;\r\n    let numeros = cnpj.substring(0, tamanho);\r\n    const digitos = cnpj.substring(tamanho);\r\n    let soma = 0;\r\n    let pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2) {\r\n        pos = 9;\r\n      }\r\n    }\r\n    let resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);\r\n    if (resultado !== Number(digitos.charAt(0))) {\r\n      return cnpjInvalido;\r\n    }\r\n    tamanho = tamanho + 1;\r\n    numeros = cnpj.substring(0, tamanho);\r\n    soma = 0;\r\n    pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2) {\r\n        pos = 9;\r\n      }\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);\r\n    if (resultado !== Number(digitos.charAt(1))) {\r\n      return cnpjInvalido;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}